security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    role_hierarchy:
        ROLE_USER: ROLE_VISITOR
        ROLE_CUSTOMER: ROLE_USER
        ROLE_MEMBER: ROLE_CUSTOMER
        ROLE_MEDIA: ROLE_MEMBER
        ROLE_ADMIN: ROLE_MEDIA
        ROLE_SUPER_ADMIN: ROLE_MEMBER

    providers:
        app_user_provider:
            entity:
                class: App\Entity\Users\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticators:
                - App\Security\LoginFormAuthenticator

            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
                default_target_path: potins_index

            remember_me:
                secret: '%env(APP_SECRET)%'
                lifetime: 604800 # 1 week in seconds
                path: /
                secure: true
                httponly: true

            logout:
                path: app_logout
                # The name of the route to redirect to after logging out
                target: potins_index
                # Secure the logout against CSRF
                # enable_csrf: true

            entry_point: 'form_login'
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
