security:

    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        app_user_provider:
            entity:
                class: App\Entity\Users\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: app_user_provider

            custom_authenticators:
                - App\Security\LoginFormAuthenticator

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 1209600    # 14 jours
                path: /
                httponly: true

            logout:
                path: app_logout
                target: potins_index

    access_control:
            - { path: ^/login, roles: PUBLIC_ACCESS }
            - { path: ^/register, roles: PUBLIC_ACCESS }
            - { path: ^/verify/email, roles: PUBLIC_ACCESS }
            - { path: ^/admin, roles: ROLE_ADMIN }
            - { path: ^/dashboard, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
