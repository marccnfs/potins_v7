ArrayBuffer, Array ou objet de type Array. Type reçu "+typeof e)}function u(e){if("number"!=typeof e)throw new TypeError('"size" argument doit être de type number');if(e<0)throw new RangeError ('La valeur "'+e+'" est invalide pour l'option "taille"')}function o(e){return u(e),a(e<0?0:0|c(e))}function l (e){for(var t=e.length<0?0:0|c(e.length),r=a(t),n=0;n<t;n+=1)r[n]= 255&e[n];return r}function c(e){if(r<=e)throw new RangeError("Tentative d'allouer un tampon supérieur à la taille maximale : 0x"+r.toString(16)+" octets"); return 0|e}fonction h(e,t){if(f.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||S(e,ArrayBuffer))return e.byteLength;if ("string"!=typeof e)throw new TypeError('L'argument "string" doit être de type string, Buffer ou ArrayBuffer. Type reçu '+typeof e);var r=e.length,n=2<arguments.length&&!0===arguments[2];if(!n&&&0===r)return 0;for(var o=! 1;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return k(e).length;case"ucs2 ":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return O(e).length ;default:if(o)return n?-1:k(e).length;t=(""+t).toLowerCase(),o=!0}}fonction t(e,t,r){var n,o,i,a=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0== =r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return "";for(e=e||"utf8"; L'argument "target" doit être de type Buffer ou Uint8Array. Type reçu '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0 ),void 0===o&&(o=this.length),t<0||r>e.length||n<0||o>this.length)throw new RangeError("index hors plage") ;if(o<=n&&r<=t)retourner 0;if(o<=n)retourner-1;if(r<=t)retourner 1;if(this===e)retourner 0;for(var i =(o>>>=0)-(n>>>=0),a=(r>>>=0)-(t>>>=0),s=Math.min(i,a), u=this.slice(n,o),l=e.slice(t,r),c=0;c<s;++c)if(u[c]!==l[c]){i =u[c],a=l[c];break}return i<a?-1:a<i?1:0},f.prototype.includes=function(e,t,r){return-1 !==this.indexOf(e,t,r)},f.prototype.indexOf=function(e,t,r){return d(this,e,t,r,!0)},f.prototype. lastIndexOf=function(e,t,r){return d(this,e,t,r,!1)},f.prototype.createMany est obsolète et sera supprimé dans une future version. Utilisez plutôt import, qui prend désormais à la fois un tableau de documents ou une chaîne de documents JSONL"),e.abrupt("return",this.import(t,r));case 3:case"end":return e. stop()}},e,this)})),function(e){return r.apply(this,arguments)})},{key:"import",value:(t=(0,o.default )(u.default.mark(function e(t){var r,n,o,i,a,s=arguments;return u.default.wrap(function(e){for(;;)switch(e. prev=e.next){case 0:return r=1<s.length&&void 0!==s[1]?s[1]:{},n=Array.isArray(t)?t.map(function( e){return JSON.stringify(e)}).join("\n"):t,e.next=4,this._apiCall.performRequest("post",this._endpointPath("import"),{queryParameters :r,bodyParameters:n,additionalHeaders:{"Content-Type":"text/plain"}});case 4:if(o=e.sent,!Array.
//# sourceMappingURL=typesense.min.js.map
